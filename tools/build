#!/usr/bin/env bash

log() { printf "%s\n" "$@"; }

invalid() { printf "Invalid option: %s\n" "$*"; }

check_cmd() {
    if ! command -v "$1" >/dev/null; then
        log "Missing $1!"
        case "$1" in
            air) log "Install it with 'go get -u github.com/cosmtrek/air'" ;;
            sassc) log "Install 'sassc' with your package manager" ;;
            inotify*) log "Install 'notify-tools' with your package manager" ;;
        esac
        return 1
    fi
}

check_dir() {
    pwd="$(pwd)"
    cd "${pwd%/tools}"
}

export_secrets() {
    set -a
    source ./.auth
    set +a
}


sass() {
    log "sass"
    check_cmd sassc
    [ $? = 1 ] && exit

    # Go to project root.
    check_dir

    # Sassc fails if directory doesn't exist.
    mkdir -p ./static/css

    if [ "$2" = "--watch" ]; then
        check_cmd inotifywait
        [ $? = 1 ] && exit
        while inotifywait -r -e close_write scss; do
            _sass
        done
    else
        _sass
    fi
}

_sass() {
    sassc --style compressed ./scss/main.scss ./static/css/main.css
}

dev() {
    log "dev"
    check_cmd air
    check_dir
    export_secrets

    env DEBUG="true" \
        DB_DEBUG="${2:-silent}" \
        DB_DROP="${3:-false}" \
        DB_COLOR="true" \
        air -c tools/air.toml
}

drop() {
    log "drop"
    check_cmd air
    env DB_DROP="true" \
        DB_COLOR="true" \
        DB_DEBUG="${2:-silent}" \
        air -c tools/air.toml
}

build() {
    log "build"
    check_dir

    GOOS=linux go build \
        -ldflags '-s -w' \
        -buildmode pie
}

case "$1" in
    build) build "$@" ;;
    prod)  prod  "$@" ;;
    sass)  sass  "$@" ;;
    dev)   dev   "$@" ;;
    *) invalid   "$@" ;;
esac
